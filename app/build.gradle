apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply from: "artifacts.gradle"
apply plugin: 'kotlin-kapt'

def sprint = 1
def lastCommitNumber = getLastCommitNumber()

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.1'
    defaultConfig {
        applicationId "com.tm.alibard.cashtracker"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode lastCommitNumber
        versionName "0.$sprint.$versionCode"
        resConfigs "auto"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}
kapt {
    generateStubs = true
}
def support_version = "26.0.1"

def  archLifecycleVersion = "1.0.0"
def  archRoomVersion = "1.0.0"
ext.dagger_version = "2.13"
dependencies {
    kapt "com.android.databinding:compiler:3.1.0-alpha04"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:recyclerview-v7:$support_version"

    compile 'com.firebaseui:firebase-ui-auth:3.1.0'
    compile 'com.google.firebase:firebase-core:11.4.2'
    compile 'com.google.firebase:firebase-database:11.4.2'
    compile 'com.android.support:appcompat-v7:26.1.0'

    // Reactive extension
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation 'io.reactivex.rxjava2:rxjava:2.0.7'

    // dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    compile 'com.github.bumptech.glide:glide:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'

    implementation 'de.hdodenhof:circleimageview:2.1.0'

    implementation 'com.airbnb.android:epoxy:2.7.3'
    implementation 'com.airbnb.android:epoxy-databinding:2.6.0'
    // Add the annotation processor if you are using Epoxy's annotations (recommended)
    annotationProcessor 'com.airbnb.android:epoxy-processor:2.7.3'
    compile "android.arch.lifecycle:extensions:$archLifecycleVersion"
    compile "android.arch.persistence.room:runtime:$archRoomVersion"
    kapt "android.arch.persistence.room:compiler:$archRoomVersion"
    annotationProcessor "android.arch.lifecycle:extensions:$archLifecycleVersion"
}
apply plugin: 'com.google.gms.google-services'

static def getLastCommitNumber() {
    def command = "git rev-list --count HEAD"
    def temp = "1"
    if (command.execute().text != "") {
        temp = command.execute().text
    }
    return temp as Integer
}
